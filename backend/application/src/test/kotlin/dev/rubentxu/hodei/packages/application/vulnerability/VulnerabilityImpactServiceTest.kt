package dev.rubentxu.hodei.packages.application.vulnerability

import dev.rubentxu.hodei.packages.application.integrityverification.service.VulnerabilityImpactService
import dev.rubentxu.hodei.packages.domain.model.artifact.Artifact
import io.kotest.core.spec.style.BehaviorSpec
import io.kotest.matchers.shouldBe

class VulnerabilityImpactServiceTest : BehaviorSpec({
    given("un CVE válido para análisis de impacto") {
        val cveId = "CVE-2025-1234"
        val fakeService = object : VulnerabilityImpactService {
            override suspend fun findImpactedArtifacts(cveId: String): List<Artifact> {
                return listOf(
                    Artifact(
                        id = dev.rubentxu.hodei.packages.domain.model.artifact.ArtifactId("artifact-1"),
                        coordinates = dev.rubentxu.hodei.packages.domain.model.artifact.ArtifactCoordinates("dev.rubentxu", "libfoo", "1.0.0"),
                        createdBy = dev.rubentxu.hodei.packages.domain.model.artifact.UserId("dev"),
                        createdAt = java.time.Instant.now()
                    )
                )
            }
        }

        `when`("se consulta el impacto de vulnerabilidad") {
            val result = fakeService.findImpactedArtifacts(cveId)
            then("el resultado debe contener los artefactos afectados") {
                result.size shouldBe 1
                result[0].coordinates.name shouldBe "libfoo"
            }
        }
    }
})
